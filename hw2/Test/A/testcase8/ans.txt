INTTK int
IDENFR global
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR func_cond
LPARENT (
RPARENT )
LBRACE {
IDENFR global
ASSIGN =
IDENFR global
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
IDENFR global
SEMICN ;
RBRACE }
VOIDTK void
IDENFR test_if
LPARENT (
RPARENT )
LBRACE {
IFTK if
LPARENT (
INTCON 0
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 1
OR ||
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 1
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
AND &&
INTCON 0
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
OR ||
NOT !
IDENFR func_cond
LPARENT (
RPARENT )
OR ||
INTCON 1
OR ||
NOT !
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
OR ||
IDENFR func_cond
LPARENT (
RPARENT )
AND &&
INTCON 1
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
OR ||
NOT !
IDENFR func_cond
LPARENT (
RPARENT )
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
AND &&
INTCON 1
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 0
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
OR ||
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
NOT !
IDENFR func_cond
LPARENT (
RPARENT )
OR ||
INTCON 1
AND &&
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 1
EQL ==
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
IFTK if
LPARENT (
INTCON 1
NEQ !=
IDENFR func_cond
LPARENT (
RPARENT )
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "21376218\n"
RPARENT )
SEMICN ;
IDENFR test_if
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR global
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Finish test1\n"
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }