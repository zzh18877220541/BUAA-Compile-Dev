const int MAXINT = 2147483647;
int MININT = -2147483648;
const char MAXCHAR = '~';
char MINCHAR = ' ';

const int ZERO = 0, ONE = 1, TWO = 2, THREE = 3, FOUR = 4;
const int FIVE = 5;
const int SIX = 6, SEVEN = 7, EIGHT = 8, NINE = 8 + 1, TEN = 10;
const int ZERO_TO_TEN[11] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
const int NO_USE1[11] = {};
const int NO_USE2[11] = {0, 1, 2, 3};

const char A = 'A', B = 'B', C = 'C', D = 'D', E = 'E';
const char F = 'F';
const char G = 'G', H = 'H', I = 'I', J = 'J';
const char ABCDEFGHIJ[11] = {'A', 'B', 'C' , 'D', 'E', 'F', 'G', 'H', 'I', 'J'};
const char NO_USE3[11] = {};
const char NO_USE4[11] = "NO_USE4";

int fibonacci[15];

void cal_fibonacci()
{
	fibonacci[1] = 1;
	int i;
	for (i = 2; i < 15; i = i + 1)
	{
		fibonacci[i] = fibonacci[i - 1] + fibonacci[i - 2];
	}
	return;
}

void print_fibonacci_n(int n1, int n2, int n3)
{
	printf("Fibonacci Array %d : %d  %d : %d  %d : %d\n", n1, fibonacci[n1], n2, fibonacci[n2], n3, fibonacci[n3]);
	return;
}


int main()
{
	{
		
	}
	{
		;;;
	}
	printf("22371298\n");
	int n1;
	n1 = getint();
	int n2;
	n2 = getint();
	int n3;
	n3 = getint();
	cal_fibonacci();
	if (n1 > 14 || n2 > 14 || n3 > 14)
	{
		
	}
	else
	{
		print_fibonacci_n(n1, n2, n3);
	}
	int max;
	max = MAXINT;
	int ten;
	ten = ZERO_TO_TEN[TEN];
	
	int i = 1;
	for (; i < 2; i = i + 1)
	{
		printf("%d\n",i);
	}

	for (i = 2;;i = i + 1)
	{
		if (i == 5 || i <= 6 || i >= 90 || i == 100 || i != 80)
		{
			break;
		}
	}
	for (i = 2;i <= 5;)
	{
		if (i != 90) break;
 	}
 	i = 100;
 	for (;;i = i + 1)
 	{
 		if (i > 10) break;
	}
 	for (;i > 50;)
 	{
 		if(i >80 && i < 120 || i == 100)
 		{
 			break;
		 }
		 else
		 {
		 	continue;
		 }
	}
	for (i = 100;;)
	{
		if (i == 100) break;
		else continue;
	}
	for (;;)
	{
		if (1 != 0)
		{
			break;
		}
	}

	char read;
	read = getchar();

	printf("a\n");
	printf("a\n");
	printf("a\n");
	printf("a\n");
	printf("a\n");
	printf("a\n");
	printf("a\n");




    return 0;
}
