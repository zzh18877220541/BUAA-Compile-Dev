CONSTTK const
INTTK int
IDENFR globalConstInt1
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
CHARTK char
IDENFR globalConstChar1
ASSIGN =
CHRCON 'a'
SEMICN ;
CONSTTK const
INTTK int
IDENFR globalConstInt2
ASSIGN =
INTCON 2
COMMA ,
IDENFR globalConstInt3
ASSIGN =
INTCON 3
SEMICN ;
CONSTTK const
CHARTK char
IDENFR globalConstChar2
ASSIGN =
CHRCON 'b'
COMMA ,
IDENFR globalConstChar3
ASSIGN =
CHRCON 'c'
SEMICN ;
INTTK int
IDENFR globalVarInt1
ASSIGN =
INTCON 4
SEMICN ;
CHARTK char
IDENFR globalVarChar1
ASSIGN =
CHRCON 'd'
SEMICN ;
INTTK int
IDENFR globalVarInt2
ASSIGN =
INTCON 5
COMMA ,
IDENFR globalVarInt3
ASSIGN =
INTCON 6
SEMICN ;
CHARTK char
IDENFR globalVarChar2
ASSIGN =
CHRCON 'e'
COMMA ,
IDENFR globalVarChar3
ASSIGN =
CHRCON 'f'
SEMICN ;
VOIDTK void
IDENFR func1
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR func2
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
INTCON 1
SEMICN ;
RBRACE }
CHARTK char
IDENFR func3
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
CHRCON 'a'
SEMICN ;
RBRACE }
VOIDTK void
IDENFR func4
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
INTCON 11
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR func5
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
RETURNTK return
IDENFR a
SEMICN ;
RBRACE }
CHARTK char
IDENFR func6
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
CHRCON 'a'
SEMICN ;
RBRACE }
INTTK int
IDENFR func7
LPARENT (
INTTK int
IDENFR a
COMMA ,
CHARTK char
IDENFR b
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 1
SEMICN ;
IDENFR b
ASSIGN =
CHRCON 'a'
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "22371443\n"
RPARENT )
SEMICN ;
LBRACE {
RBRACE }
INTTK int
IDENFR localVar1
ASSIGN =
INTCON 1
SEMICN ;
CHARTK char
IDENFR localVar2
ASSIGN =
CHRCON 'a'
SEMICN ;
INTTK int
IDENFR localVar3
COMMA ,
IDENFR localVar4
SEMICN ;
CHARTK char
IDENFR localVar5
COMMA ,
IDENFR localVar6
SEMICN ;
IDENFR localVar3
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
IDENFR localVar5
ASSIGN =
GETCHARTK getchar
LPARENT (
RPARENT )
SEMICN ;
IDENFR localVar4
ASSIGN =
INTCON 2
SEMICN ;
IDENFR localVar6
ASSIGN =
CHRCON 'b'
SEMICN ;
SEMICN ;
IFTK if
LPARENT (
IDENFR localVar1
EQL ==
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR localVar1
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR localVar3
NEQ !=
INTCON 2
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR localVar3
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR localVar3
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
IDENFR i
LSS <
INTCON 2
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "for\n"
RPARENT )
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
IDENFR i
LSS <
INTCON 2
SEMICN ;
RPARENT )
LBRACE {
IDENFR func1
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "lack 1, situation 1\n"
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
FORTK for
LPARENT (
SEMICN ;
IDENFR i
LSS <
INTCON 2
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR func2
LPARENT (
RPARENT )
EQL ==
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "lack 1, situation 2\n"
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "lack 1, situation 3 and %c\n"
COMMA ,
IDENFR func3
LPARENT (
RPARENT )
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
SEMICN ;
RPARENT )
LBRACE {
IDENFR func4
LPARENT (
IDENFR globalConstInt1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "lack 2, situation 1\n"
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
FORTK for
LPARENT (
SEMICN ;
IDENFR i
LSS <
INTCON 2
SEMICN ;
RPARENT )
LBRACE {
IDENFR func5
LPARENT (
IDENFR globalConstInt2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "lack 2, situation 2\n"
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
FORTK for
LPARENT (
SEMICN ;
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
RPARENT )
LBRACE {
CHARTK char
IDENFR aa
ASSIGN =
IDENFR func6
LPARENT (
IDENFR globalConstInt3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "lack 2, situation 3 and %c\n"
COMMA ,
IDENFR aa
RPARENT )
SEMICN ;
BREAKTK break
SEMICN ;
RBRACE }
IDENFR func7
LPARENT (
IDENFR globalConstInt1
COMMA ,
IDENFR globalConstChar1
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }