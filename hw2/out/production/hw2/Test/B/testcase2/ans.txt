CONSTTK const
INTTK int
IDENFR constIntArray
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 10
COMMA ,
INTCON 20
COMMA ,
INTCON 30
RBRACE }
SEMICN ;
CONSTTK const
CHARTK char
IDENFR constCharArray
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
LBRACE {
CHRCON 'A'
COMMA ,
CHRCON 'B'
COMMA ,
CHRCON 'C'
COMMA ,
CHRCON 'D'
COMMA ,
CHRCON 'E'
RBRACE }
SEMICN ;
CONSTTK const
CHARTK char
IDENFR constCharArray2
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
STRCON "abc"
SEMICN ;
INTTK int
IDENFR intArray
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
CHARTK char
IDENFR charArray
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR func_with_param
LPARENT (
INTTK int
IDENFR a
COMMA ,
CHARTK char
IDENFR b
COMMA ,
INTTK int
IDENFR arr
LBRACK [
RBRACK ]
COMMA ,
CHARTK char
IDENFR str
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Function with parameters: a = %d, b = %c arr[0] = %d, str[0] = %c\n"
COMMA ,
IDENFR a
COMMA ,
IDENFR b
COMMA ,
IDENFR arr
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR str
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
INTTK int
IDENFR sum
ASSIGN =
IDENFR a
PLUS +
IDENFR b
PLUS +
IDENFR arr
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR str
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Sum in func_with_param: %d\n"
COMMA ,
IDENFR sum
RPARENT )
SEMICN ;
RETURNTK return
IDENFR sum
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "22373141\n"
RPARENT )
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR constIntArray
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR constIntArray
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR constIntArray
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR intArray
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
IDENFR intArray
LBRACK [
INTCON 3
RBRACK ]
PLUS +
IDENFR intArray
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
MINU -
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Negative intArray[0]: %d\n"
COMMA ,
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
PLUS +
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Positive intArray[0]: %d\n"
COMMA ,
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
IDENFR intArray
LBRACK [
INTCON 3
RBRACK ]
DIV /
IDENFR intArray
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
IDENFR intArray
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR intArray
LBRACK [
INTCON 3
RBRACK ]
MOD %
IDENFR intArray
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Quotient: %d, Remainder: %d\n"
COMMA ,
IDENFR intArray
LBRACK [
INTCON 1
RBRACK ]
COMMA ,
IDENFR intArray
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
IDENFR charArray
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR constCharArray
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR constCharArray
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR constCharArray
LBRACK [
INTCON 2
RBRACK ]
PLUS +
IDENFR constCharArray
LBRACK [
INTCON 3
RBRACK ]
PLUS +
IDENFR constCharArray
LBRACK [
INTCON 4
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Sum of ASCII codes1: %d %c\n"
COMMA ,
IDENFR charArray
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR charArray
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
INTTK int
IDENFR result
ASSIGN =
IDENFR func_with_param
LPARENT (
IDENFR intArray
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR charArray
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR intArray
COMMA ,
IDENFR charArray
RPARENT )
SEMICN ;
INTTK int
IDENFR asciiSum
ASSIGN =
IDENFR constCharArray2
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 2
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 3
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 4
RBRACK ]
SEMICN ;
CHARTK char
IDENFR charSum
ASSIGN =
IDENFR constCharArray2
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 2
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 3
RBRACK ]
PLUS +
IDENFR constCharArray2
LBRACK [
INTCON 4
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "Sum of ASCII codes2: %d %c\n"
COMMA ,
IDENFR asciiSum
COMMA ,
IDENFR charSum
RPARENT )
SEMICN ;
INTTK int
IDENFR x1
ASSIGN =
CHRCON 'a'
PLUS +
INTCON 10
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "x1 = %d\n"
COMMA ,
IDENFR x1
RPARENT )
SEMICN ;
CHARTK char
IDENFR a1
ASSIGN =
CHRCON '0'
MINU -
INTCON 7
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "a1 = %d, as char: %c\n"
COMMA ,
IDENFR a1
COMMA ,
IDENFR a1
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }