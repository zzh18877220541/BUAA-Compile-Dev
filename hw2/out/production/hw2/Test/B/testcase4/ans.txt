INTTK int
IDENFR a1
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
INTTK int
IDENFR a2
LBRACK [
INTCON 5
RBRACK ]
COMMA ,
IDENFR a3
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR a4
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RBRACE }
SEMICN ;
CHARTK char
IDENFR c1
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
CHARTK char
IDENFR c2
LBRACK [
INTCON 5
RBRACK ]
COMMA ,
IDENFR c3
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
CHARTK char
IDENFR c4
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
STRCON "hey"
COMMA ,
IDENFR c5
LBRACK [
INTCON 10
RBRACK ]
ASSIGN =
LBRACE {
CHRCON 'h'
COMMA ,
CHRCON 'e'
COMMA ,
CHRCON 'l'
COMMA ,
CHRCON 'l'
COMMA ,
CHRCON 'o'
COMMA ,
CHRCON '\0'
RBRACE }
SEMICN ;
INTTK int
IDENFR f1
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR len
RPARENT )
LBRACE {
INTTK int
IDENFR sum
ASSIGN =
INTCON 0
COMMA ,
IDENFR i
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR len
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR sum
ASSIGN =
IDENFR sum
PLUS +
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
RBRACE }
RETURNTK return
IDENFR sum
SEMICN ;
RBRACE }
INTTK int
IDENFR f2
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 1
RPARENT )
RETURNTK return
INTCON 1
SEMICN ;
ELSETK else
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 2
RPARENT )
RETURNTK return
INTCON 1
SEMICN ;
ELSETK else
RETURNTK return
IDENFR f2
LPARENT (
IDENFR n
MINU -
INTCON 1
RPARENT )
PLUS +
IDENFR f2
LPARENT (
IDENFR n
MINU -
INTCON 2
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR f3
LPARENT (
CHARTK char
IDENFR s
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "%c\n"
COMMA ,
IDENFR s
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
INTTK int
IDENFR f4
LPARENT (
INTTK int
IDENFR a
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR b
LBRACK [
RBRACK ]
COMMA ,
INTTK int
IDENFR len
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR sum
ASSIGN =
INTCON 0
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
IDENFR len
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR sum
ASSIGN =
IDENFR sum
PLUS +
IDENFR a
LBRACK [
IDENFR i
RBRACK ]
MULT *
IDENFR b
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
RBRACE }
RETURNTK return
IDENFR sum
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR n
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "21374275\n"
RPARENT )
SEMICN ;
IDENFR a4
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
INTCON 4
SEMICN ;
IDENFR a4
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
INTCON 5
SEMICN ;
INTTK int
IDENFR sum
ASSIGN =
IDENFR f1
LPARENT (
IDENFR a4
COMMA ,
INTCON 5
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "sum = %d\n"
COMMA ,
IDENFR sum
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "c4[0] = %c\n"
COMMA ,
IDENFR c4
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "c5[0] = %c\n"
COMMA ,
IDENFR c5
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
INTTK int
IDENFR t
ASSIGN =
INTCON 100
SEMICN ;
IDENFR t
ASSIGN =
LPARENT (
IDENFR t
PLUS +
INTCON 1
RPARENT )
MOD %
INTCON 25
MULT *
INTCON 5
MINU -
INTCON 3
DIV /
INTCON 2
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "t = %d\n"
COMMA ,
IDENFR t
RPARENT )
SEMICN ;
IDENFR t
ASSIGN =
IDENFR f2
LPARENT (
INTCON 10
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR t
RPARENT )
SEMICN ;
CHARTK char
IDENFR s
LBRACK [
INTCON 10
RBRACK ]
ASSIGN =
STRCON "123456"
SEMICN ;
IDENFR f3
LPARENT (
IDENFR s
RPARENT )
SEMICN ;
IDENFR f3
LPARENT (
IDENFR c4
RPARENT )
SEMICN ;
IDENFR f3
LPARENT (
IDENFR c5
RPARENT )
SEMICN ;
INTTK int
IDENFR a5
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 2
COMMA ,
INTCON 3
COMMA ,
INTCON 4
RBRACE }
SEMICN ;
INTTK int
IDENFR a6
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 5
COMMA ,
INTCON 7
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "sum + 1 = %d\n"
COMMA ,
IDENFR f4
LPARENT (
IDENFR a5
COMMA ,
IDENFR a6
COMMA ,
IDENFR a5
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
PLUS +
INTCON 1
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }